{
	"info": {
		"_postman_id": "76ba2422-48cd-41df-9401-d9355feb2e3d",
		"name": "Postman_HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20440738"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body is correct\", function () {\r",
							"\r",
							"    pm.response.to.have.body(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = pm.request.url.query.all();\r",
							"let req_name = pm.request.url.query.get('name');\r",
							"let req_age = pm.request.url.query.get('age');\r",
							"let req_salary = +pm.request.url.query.get('salary');\r",
							"let family = jsonData.family\r",
							"console.log(family)\r",
							"\r",
							"pm.test(\"Name is correct\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age is correct\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary is correct\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Dog has name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property('name')\r",
							"});\r",
							"\r",
							"pm.test(\"Dog has age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dog name is correct\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"\r",
							"pm.test(\"Dog age is correct\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Nikita&age=27&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Nikita"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = pm.request.url.query.all();\r",
							"let req_name = pm.request.url.query.get('name');\r",
							"let req_age = +pm.request.url.query.get('age');\r",
							"let req_salary = +pm.request.url.query.get('salary');\r",
							"let req_salary1 = +pm.request.url.query.get('salary')*2;\r",
							"let req_salary2 = +pm.request.url.query.get('salary')*3;\r",
							"console.log(req_salary)\r",
							"console.log(jsonData.salary)\r",
							"console.log(jsonData.salary[0])\r",
							"console.log(jsonData.salary[1])\r",
							"console.log(jsonData.salary[2])\r",
							"\r",
							"let environment_salary = 1000\r",
							"pm.environment.set(\"name\", jsonData.name);\r",
							"pm.environment.set(\"age\", jsonData.age);\r",
							"pm.environment.set(\"salary\", environment_salary);\r",
							"\r",
							"let n_salary = 0\r",
							"while(n_salary < 3){\r",
							"    console.log(jsonData.salary[n_salary])\r",
							"    n_salary++\r",
							"}\r",
							"\r",
							"pm.test(\"Name is correct\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req_name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age is correct\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req_age);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary[0] is correct\", function () {\r",
							"    pm.expect(jsonData.salary[0]).to.eql(req_salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary[1] is correct\", function () {\r",
							"    pm.expect(jsonData.salary[1]).to.eql(String(req_salary1));\r",
							"});\r",
							"\r",
							"pm.test(\"Salary[2] is correct\", function () {\r",
							"    pm.expect(jsonData.salary[2]).to.eql(String(req_salary2));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Nikita&age=27&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Nikita"
						},
						{
							"key": "age",
							"value": "27"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = request.data\r",
							"let family = jsonData.family\r",
							"let req_salary15 = +req.salary*4\r",
							"console.log(family)\r",
							"\r",
							"pm.test(\"Name is correct\", function () {\r",
							"    pm.expect(jsonData.name).to.eql('Nikita');\r",
							"});\r",
							"\r",
							"pm.test(\"Age is correct\", function () {\r",
							"    pm.expect(jsonData.age).to.eql('27');\r",
							"});\r",
							"\r",
							"pm.test(\"Salary is correct\", function () {\r",
							"    pm.expect(jsonData.salary).to.eql(2000);\r",
							"});\r",
							"\r",
							"pm.test(\"Name from request\", function () {\r",
							"    pm.expect(jsonData.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Age from request\", function () {\r",
							"    pm.expect(jsonData.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary from request\", function () {\r",
							"    pm.expect(String(jsonData.salary)).to.eql(req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Salary 1,5 year check\", function () {\r",
							"    pm.expect(family.u_salary_1_5_year).to.eql(req_salary15);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Nikita",
							"type": "text"
						},
						{
							"key": "age",
							"value": "27",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let jsonData = pm.response.json();\r",
							"let req = request.data\r",
							"let salary_6months = +req.salary*2\r",
							"let salary_12months = +req.salary*2.7\r",
							"let salary_15year = +req.salary*3.3\r",
							"let salary_35year = +req.salary*3.8\r",
							"let salary_5years = +req.salary*4.2\r",
							"\r",
							"pm.test(\"Response has start QA salary\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"start_qa_salary\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has QA salary after 6 months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_6_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has QA salary after 12 months\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_12_months\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has QA salary after 1.5 year\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_1.5_year\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has QA salary after 3.5 years\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"qa_salary_after_3.5_years\")\r",
							"});\r",
							"\r",
							"pm.test(\"Response has person parameter\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"person\")\r",
							"});\r",
							"\r",
							"pm.test(\"Start QA salary from request\", function () {\r",
							"    pm.expect(jsonData.start_qa_salary).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"QA salary after 6 months check\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_6_months).to.eql(salary_6months);\r",
							"});\r",
							"\r",
							"pm.test(\"QA salary after 12 months check\", function () {\r",
							"    pm.expect(jsonData.qa_salary_after_12_months).to.eql(salary_12months);\r",
							"});\r",
							"\r",
							"pm.test(\"QA salary after 1.5 year check\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_1.5_year']).to.eql(salary_15year);\r",
							"});\r",
							"\r",
							"pm.test(\"QA salary after 3.5 years check\", function () {\r",
							"    pm.expect(jsonData['qa_salary_after_3.5_years']).to.eql(salary_35year);\r",
							"});\r",
							"\r",
							"pm.test(\"Проверить, что в параметре person, 1-й элемент из u_name равен salary из request\", function () {\r",
							"    pm.expect(jsonData.person.u_name[1]).to.eql(+req.salary);\r",
							"});\r",
							"\r",
							"pm.test(\"Проверить, что параметр u_age равен age из request\", function () {\r",
							"    pm.expect(jsonData.person.u_age).to.eql(+req.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Проверить, что параметр u_salary_5_years равен salary*4.2 из request\", function () {\r",
							"    pm.expect(jsonData.person.u_salary_5_years).to.eql(salary_5years);\r",
							"});\r",
							"\r",
							"for(n_person of Object.entries(jsonData.person)){\r",
							"    console.log(n_person)\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}